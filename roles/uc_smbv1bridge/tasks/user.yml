---

- name: determine available groups
  getent:
    database: group

- name: determine available users
  getent:
    database: passwd

- name: set group with gid 1900 when not available
  become: true
  group:
    name: "{{ uc_smbv1brdige_os_group }}"
    gid: 1900
  when:
    - "'reuser' not in ansible_facts.getent_group"
    - "'1900' not in item.value"
  loop: "{{ ansible_facts.getent_group | dict2items }}"

- name: set group with gid 2020 when not available
  become: true
  group:
    name: "{{ uc_smbv1brdige_os_group }}"
    gid: 2020
  when:
    - "'reuser' not in ansible_facts.getent_group"
    - "'2020' not in item.value"
  loop: "{{ ansible_facts.getent_group | dict2items }}"

- name: create random number
  become: true
  set_fact:
    random_num: "{{ range(1500, 2000) | random(seed=item) }}"
    run_once: yes
  with_items:
    - string

- name: set group with random gid when 2020 already in use
  become: true
  group:
    name: "{{ uc_smbv1brdige_os_group }}"
    gid: "{{ random_num }}"
  when:
    - "'reuser' not in ansible_facts.getent_group"
    - "'2020' in item.value"
  loop: "{{ ansible_facts.getent_group | dict2items }}"

- name: set fact when "{{ uc_smbv1brdige_os_user }}" exists
  become: true
  set_fact:
    user_exists: true
  when: '"reuser" in item.key'
  loop: "{{ ansible_facts.getent_passwd | dict2items }}"

- name: set fact when "{{ uc_smbv1brdige_os_user }}" does not exists
  become: true
  set_fact:
    user_exists: false
  when: '"reuser" not in item.key'
  loop: "{{ ansible_facts.getent_passwd | dict2items }}"

- name: set user with uid 1900, and group "{{ uc_smbv1brdige_os_user }}" when not available
  become: true
  user:
    name: "{{ uc_smbv1brdige_os_user }}"
    uid: 1900
    group: "{{ uc_smbv1brdige_os_group }}"
    home: "{{ uc_smbv1brdige_os_dir_home }}"
  when:
    - not user_exists
    - "'1900' not in item.value[1]"
  loop: "{{ ansible_facts.getent_passwd | dict2items }}"

- name: set user with uid 2020, and group "{{ uc_smbv1brdige_os_user }}" when not available
  become: true
  user:
    name: "{{ uc_smbv1brdige_os_user }}"
    uid: 2020
    group: "{{ uc_smbv1brdige_os_group }}"
    home: "{{ uc_smbv1brdige_os_dir_home }}"
  when:
    - not user_exists
    - "'2020' not in item.value[1]"
  loop: "{{ ansible_facts.getent_passwd | dict2items }}"

- name: set user with random uid, and group "{{ uc_smbv1brdige_os_user }}" when not available
  become: true
  user:
    name: "{{ uc_smbv1brdige_os_user }}"
    uid: "{{ random_num }}"
    group: "{{ uc_smbv1brdige_os_group }}"
    home: "{{ uc_smbv1brdige_os_dir_home }}"
  when:
    - not user_exists
    - "'2020' in item.value[1]"
  loop: "{{ ansible_facts.getent_passwd | dict2items }}"